version: '3.9'

services:
  backend:
    build:
      context: .
      target: ${NODE_ENV:-development}
    container_name: mock_backend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOKI_HOST: http://loki:3100
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      LOGIN_JWT_EXPIRES_SECONDS: ${LOGIN_JWT_EXPIRES_SECONDS}
      OTP_JWT_EXPIRES_SECONDS: ${OTP_JWT_EXPIRES_SECONDS}
      ENABLE_DOCS: ${ENABLE_DOCS}
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "8888:8888"
      - "9229:9229"
    volumes:
      - .:/app
      - /app/node_modules
      - assets:/app/mock_assets
      - logs:/app/logs
    networks:
      - network
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/static/helpline"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
      loki:
        condition: service_started
  postgres:
    image: postgres:17.4
    container_name: mock_db
    environment:
      POSTGRES_USER: ${DB_USERNAME:-mock}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-mock_db}
    ports:
      - "5435:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-mock}"]
      interval: 10s
      timeout: 5s
      retries: 5

  loki:
    image: grafana/loki:2.9.0
    container_name: mock_loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    user: "10001:10001"
    restart: unless-stopped
    networks:
      - network

  grafana:
    image: grafana/grafana:10.2.0
    container_name: mock_grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - network

volumes:
  db:
  assets:
  backend:
  logs:
  loki_data:
  grafana_data:

networks:
  network:
    driver: bridge